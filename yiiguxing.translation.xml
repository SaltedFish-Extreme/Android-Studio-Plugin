<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogHeight" value="244" />
    <option name="newTranslationDialogWidth" value="328" />
    <option name="newTranslationDialogX" value="134" />
    <option name="newTranslationDialogY" value="492" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Mozilla" />
      <item value="drake" />
      <item value="new fresh" />
      <item value="delete confirm" />
      <item value="DateFormat character 'Y' in YY is the week-era-year; did you mean 'y' ?" />
      <item value="url" />
      <item value="user Agent" />
      <item value="content Disposition" />
      <item value="mimetype" />
      <item value="content Length" />
      <item value="unique" />
      <item value="STRICT CHECK" />
      <item value="set Security Type" />
      <item value="intercept Unkown Url" />
      <item value="Receiver Call Not Allowed Exception" />
      <item value="接收广播" />
      <item value="Error receiving broadcast Intent { act=android.net.conn.CONNECTIVITY_CHANGE flg=0x4200010 (has extras) } in com.example.wanAndroid.ui.receiver.NetworkConnectChangedReceiver@ee115ed" />
      <item value="e.g." />
      <item value="screen" />
      <item value="icon Tint Mode" />
      <item value="确认" />
      <item value="add Item Decoration" />
      <item value="HONEYCOMB" />
      <item value="Could hide open views here if you wanted." />
      <item value="RecyclerView: The new recycler view replaces the list view. Its more modular and therefore we must implement some of the functionality ourselves and attach it to our recyclerview. &lt;p&gt; 1) Position items on the screen: This is done with LayoutManagers 2) Animate &amp; Decorate views: This is done with ItemAnimators &amp; ItemDecorators 3) Handle any touch events apart from scrolling: This is now done in our adapter's ViewHolder" />
      <item value="get View Holder Position" />
      <item value="Called when item is swiped, the view is going to be removed from the adapter." />
      <item value="direction" />
      <item value="is Currently Active" />
      <item value="clear View" />
      <item value="on Item Swiped" />
      <item value="时长" />
      <item value="Set the swipe movement direction.&lt;p&gt; The value should be ItemTouchHelper.START, ItemTouchHelper.END or their combination.&lt;p&gt; can combine them like ItemTouchHelper.START | ItemTouchHelper.END, it means that the item could swipe to both left or right." />
      <item value="is Drag Enabled" />
      <item value="set Swipe Enabled" />
      <item value="on Item Swipe Moving" />
      <item value="on Item Swipe Start" />
      <item value="include Font Padding" />
      <item value="weight Sum" />
      <item value="Surface View End" />
      <item value="History Record" />
      <item value="wrapped.contentEncoding must not be null" />
      <item value="default Value" />
      <item value="UNIQUE constraint" />
      <item value="Error inserting url=https:url.rengwuxian.comgw title=给高级 Android 工程师的进阶手册 from {P:10917;U:10617} android.database.sqlite.SQLiteConstraintException: UNIQUE constraint failed: historyrecorddb.title (code 2067 SQLITE_CONSTRAINT_UNIQUE)" />
      <item value="For security reasons offline mode is disabled when the process being inspected does not correspond to the project open in studio or when the project has been generated from a prebuilt apk." />
      <item value="历史记录" />
      <item value="nullable" />
      <item value="Define your models in the list with mapping tag, LitePal will create tables for each mapping class. The supported fields defined in models will be mapped into columns. For example:" />
      <item value="Define the version of your database. Each time you want to upgrade your database, the version tag would helps. Modify the models you defined in the mapping tag, and just make the version value plus one, the upgrade of database will be processed automatically without concern. For example:" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1349" />
        <entry key="ENGLISH" value="1350" />
        <entry key="IRISH" value="2" />
        <entry key="BASQUE" value="3" />
        <entry key="BULGARIAN" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="7" />
        <entry key="FILIPINO" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="LATVIAN" value="2" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="5" />
        <entry key="MARATHI" value="3" />
        <entry key="BENGALI" value="2" />
        <entry key="NORWEGIAN" value="4" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="4" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1645281005852" />
  </component>
  <component name="Settings">
    <option name="translateDocumentation" value="true" />
  </component>
</application>
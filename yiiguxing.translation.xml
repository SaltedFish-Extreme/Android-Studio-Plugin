<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="592" />
    <option name="newTranslationDialogX" value="432" />
    <option name="newTranslationDialogY" value="539" />
    <histories>
      <item value="Merge remote-tracking branch 'origintianjin' into tianjin-dev" />
      <item value="Unresolved reference: CenterHorizontally" />
      <item value="This state should be hoisted" />
      <item value="Don't copy over" />
      <item value="Redundant label can be removed" />
      <item value="animation" />
      <item value="surfaceColor color will be changing gradually from primary to surface" />
      <item value="surfaceColor will be updated gradually from one color to the other" />
      <item value="If the message is expanded, we display all its content otherwise we only display the first line" />
      <item value="We toggle the isExpanded variable when we click on this Column" />
      <item value="We keep track if the message is expanded or not in this" />
      <item value="is Expanded" />
      <item value="fill Max Size" />
      <item value="Previews are also interactive after enabling the experimental setting" />
      <item value="Compose Previews are great to check quickly how a composable layout looks like" />
      <item value="I didn't know you can now run the emulator directly from Android Studio" />
      <item value="Writing Kotlin for UI seems so natural, Compose where have you been all my life?" />
      <item value="Searching for alternatives to XML layouts..." />
      <item value="Have you tried writing build.gradle with KTS?" />
      <item value="Add a vertical space between the author and message texts" />
      <item value="Add a horizontal space between the image and the column" />
      <item value="Clip image to be shaped as a circle" />
      <item value="space" />
      <item value="Composable functions with non-default parameters are not supported in Preview unless they are annotated with @PreviewParameter." />
      <item value="The following line ensures that the Material Icons font is included with your application, so that you can use the icons in the material Icons class." />
      <item value="This trailing comma makes auto-formatting nicer for build methods." />
      <item value="Column is also a layout widget. It takes a list of children and arranges them vertically. By default, it sizes itself to fit its children horizontally, and tries to be as tall as its parent. Invoke &quot;debug painting&quot; (press &quot;p&quot; in the console, choose the &quot;Toggle Debug Paint&quot; action from the Flutter Inspector in Android Studio, or the &quot;Toggle Debug Paint&quot; command in Visual Studio Code) to see the wireframe for each widget. Column has various properties to control how it sizes itself and how it positions its children. Here we use mainAxisAlignment to center the children vertically; the main axis here is the vertical axis because Columns are vertical (the cross axis would be horizontal)." />
      <item value="Center is a layout widget. It takes a single child and positions it in the middle of the parent." />
      <item value="Here we take the value from the MyHomePage object that was created by the App.build method, and use it to set our appbar title." />
      <item value="This method is rerun every time setState is called, for instance as done by the _incrementCounter method above. The Flutter framework has been optimized to make rerunning build methods fast, so that you can just rebuild anything that needs updating rather than having to individually change instances of widgets." />
      <item value="This call to setState tells the Flutter framework that something has changed in this State, which causes it to rerun the build method below so that the display can reflect the updated values. If we changed _counter without calling setState(), then the build method would not be called again, and so nothing would appear to happen." />
      <item value="This widget is the home page of your application. It is stateful, meaning that it has a State object (defined below) that contains fields that affect how it looks. This class is the configuration for the state. It holds the values (in this case the title) provided by the parent (in this case the App widget) and used by the build method of the State. Fields in a Widget subclass are always marked &quot;final&quot;." />
      <item value="This is the theme of your application. Try running your application with &quot;flutter run&quot;. You'll see the application has a blue toolbar. Then, without quitting the app, try changing the primarySwatch below to Colors.green and then invoke &quot;hot reload&quot; (press &quot;r&quot; in the console where you ran &quot;flutter run&quot;, or simply save your changes to &quot;hot reload&quot; in a Flutter IDE). Notice that the counter didn't reset back to zero; the application is not restarted." />
      <item value="This widget is the root of your application." />
      <item value="Missing accessibility label: provide either a view with an android:labelFor that references this view or provide an android:hint" />
      <item value="This custom view should extend androidx.appcompat.widget.AppCompatTextView instead" />
      <item value="Specifies that this view should permit nested scrolling within a compatible ancestor view." />
      <item value="Defines over-scrolling behavior. This property is used only if the View is scrollable. Over-scrolling is the ability for the user to receive feedback when attempting to scroll beyond meaningful content." />
      <item value="Set this if the view will serve as a scrolling container, meaning that it can be resized to shrink its overall window so that there will be space for an input method. If not set, the default value will be true if &quot;scrollbars&quot; has the vertical scrollbar set, else it will be false." />
      <item value="Consider replacing android:layout_alignParentRight with android:layout_alignParentEnd=&quot;true&quot; to better support right-to-left layouts" />
      <item value="查看" />
      <item value="Alphabet" />
      <item value="This declaration is in a preview state and can be changed in a backwards-incompatible manner with a best-effort migration. Its usage should be marked with '@kotlinx.coroutines.FlowPreview' or '@OptIn(kotlinx.coroutines.FlowPreview::class)' if you accept the drawback of relying on preview API" />
      <item value="Accepts the given collector and emits values into it. This method can be used along with SAM-conversion of FlowCollector: myFlow.collect { value -&gt; println(&quot;Collected value&quot;) } Method inheritance To ensure the context preservation property, it is not recommended implementing this method directly. Instead, AbstractFlow can be used as the base type to properly ensure flow's properties. All default flow implementations ensure context preservation and exception transparency properties on a best-effort basis and throw IllegalStateException if a violation was detected." />
      <item value="Cannot call this method while RecyclerView is computing a layout or scrolling androidx.recyclerview.widget.RecyclerView{560948 VFED..... ......I. 0,0-0,0 7f0a023f app:idgrid_rv}, adapter:cn.crrc.imos.mainfragments.home.HomeFragmentGridRvAdapter@12613e1, layout:androidx.recyclerview.widget.GridLayoutManager@84b3506, context:cn.crrc.imos.mian.MainActivity@ffdb9cb" />
      <item value="I'm not in China: https:cirosantilli.comchina-dictatorshiphas-ciro-santilli-you-ever-lived-in-china I'm not 100% certain how important going through a third server is, this is beyond my domain of expertise. You obviously want encryption at all steps, i.e. HTTPS. And HTTPS alone already cannot be broken by anybody, the CCP won't be able to read the message. It all depends on how likely you think that a timing attack is: https:book.cyberyozh.comtiming-attack-how-special-services-deanonymize-users-messengers If you VPN into Tor however, a timing attack feels very unlikely given that each circuit will have a different timing. And please don't leak your ID through git log like terminus 2049 did: https:cirosantilli.comchina-dictatorshipterminus2049 !! So newb. I also recommend trying to contact the following peoplegroups: https:cirosantilli.comchina-dictatorshipduty-machine They seem to exclusively use a bot. https:github.comchinatimelinechinatimeline.github.io also bot related stuff. Perhaps just HTTPS and then using a bot through a private github repo is the best option. Research things thoroughly before doing anything. If you would like to publish or highlight a limited number of things, feel free to contact me privately on protonmail: https:cirosantilli.comcontact and I might publish it myself. Stay safe." />
      <item value="I have a question that, how to post these sensitive news? R u in China. In my opinion, if u r in China, u should git the info to your own server outside Mainland, then git the info from outside to github. All git transfer must be https. Am I right?" />
      <item value="D:gradlecachestransforms-2files-2.10a20ec77ce1c7059350ffcf45d4d2037jetified-BRV-1.3.83jarsclasses.jar!META-INFbrv_release.kotlin_module: Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.6.0, expected version is 1.4.0." />
      <item value="D:gradlecachesmodules-2files-2.1org.jetbrains.kotlinkotlin-stdlib1.6.2111ef67f1900634fd951bad28c53ec957fabbe5b8kotlin-stdlib-1.6.21.jar!META-INFkotlin-stdlib.kotlin_module: Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.6.0, expected version is 1.4.0." />
      <item value="User Profile Bean" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="51" />
        <entry key="ENGLISH" value="52" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1669599380971" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20221025001414231" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="translator" value="BAIDU" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1691374370973" />
  </component>
  <component name="Translation.Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20221025001414231" />
      </app-key>
    </option>
    <option name="primaryLanguage" value="CHINESE" />
    <option name="showActionsInContextMenuOnlyWithSelection" value="false" />
    <option name="translateDocumentation" value="true" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogHeight" value="256" />
    <option name="newTranslationDialogWidth" value="936" />
    <option name="newTranslationDialogX" value="167" />
    <option name="newTranslationDialogY" value="743" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="设置页面" />
      <item value="判断登录操作" />
      <item value="Photo" />
      <item value="Multiple substitutions specified in non-positional format of string resource stringpage_num. Did you mean to add the formatted=&quot;false&quot; attribute?" />
      <item value="FATAL EXCEPTION: main" />
      <item value="IllegalArgumentException: Illegal value type com.example.smile.ui.activity.MainActivity for key &quot;activity&quot;" />
      <item value="This declaration overrides deprecated member but not marked as deprecated itself. This deprecation won't be inherited in future releases. Please add" />
      <item value="'onActivityResult(Int, Int, Intent?): Unit' is deprecated. Overrides deprecated member in 'androidx.activity.ComponentActivity'. Deprecated in Java" />
      <item value="Data class must have at least one primary constructor parameter" />
      <item value="Serializer has not been found for type 'Nullable'. To use context serializer as fallback, explicitly annotate type or property with @Contextual" />
      <item value="Serializer for class 'Any' is not found. Please ensure that class is marked as '@Serializable' and that the serialization compiler plugin is applied." />
      <item value="JsonDecodingException: Expected start of the object '{', but had 'EOF' instead at path: JSON input: null" />
      <item value="com.tencent.qqmini.sdk.MiniSDK.startMiniApp [class android.content.Context, class java.lang.String, int, int]" />
      <item value="Serializer has not been found for type 'Any'. To use context serializer as fallback, explicitly annotate type or property with @Contextual" />
      <item value="Serializer has not been found for type 'Any?'. To use context serializer as fallback, explicitly annotate type or property with @Contextual" />
      <item value="咸鱼空间" />
      <item value="salted-fish-scope" />
      <item value="意见反馈" />
      <item value="Could not initialize class com.android.sdklib.repository.AndroidSdkHandler" />
      <item value="key doesn't match with scope" />
      <item value="upload failed" />
      <item value="upload success" />
      <item value="上传成功" />
      <item value="上传失败" />
      <item value="七牛云" />
      <item value="java.lang.UnsupportedOperationException: Failed to resolve attribute at index 0: TypedValue{t=0x2d=0x7f040108 a=-1}" />
      <item value="DecorView setVisiblity: visibility = 0, Parent = android.view.ViewRootImpl@c714f31, this = DecorView@3fdc79f[MainActivity]" />
      <item value="Failed to resolve attribute at index 0: TypedValue{t=0x2d=0x7f040108 a=-1}" />
      <item value="Unsupported Operation Exception" />
      <item value="plate number" />
      <item value="number plate" />
      <item value="车牌号" />
      <item value="photo List" />
      <item value="Upload Picture Adapter" />
      <item value="上传添加图片适配器" />
      <item value="provider" />
      <item value="request Show Keyboard Shortcuts" />
      <item value="feedback Contact Info" />
      <item value="删除成功" />
      <item value="set Dimmed Behind" />
      <item value="Supertypes of the following classes cannot be resolved. Please make sure you have the required dependencies in the classpath: class com.example.smile.ui.adapter.UploadPictureAdapter, unresolved supertypes: Adapter&lt;MainVH&gt; Adding -Xextended-compiler-checks argument might provide additional information." />
      <item value="联系方式" />
      <item value="supplementary pictures" />
      <item value="补充图片" />
      <item value="描述问题" />
      <item value="The project is using an incompatible version (AGP 8.1.0) of the Android Gradle plugin. Latest supported version is AGP 8.0.2" />
      <item value="Feedback Activity" />
      <item value="load Animation" />
      <item value="Use Live Edit to update composables in real time New UI theme Support for Grammatical Inflection API Automatic per-app language support New API support for Compose Animation Preview View and manage processes in the Device Explorer New Android SDK Upgrade Assistant Support for Gradle Version Catalogs Enhanced diagnostic tools and bug reporting Make Selected Modules toolbar button Download info during sync Android Lint contains bytecode targeting JVM 17 Native library compression setting moved to DSL" />
      <item value="坐标" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="726" />
        <entry key="ENGLISH" value="726" />
        <entry key="GALICIAN" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="LATVIAN" value="1" />
        <entry key="POLISH" value="1" />
      </map>
    </option>
  </component>
</application>
<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="592" />
    <option name="newTranslationDialogX" value="432" />
    <option name="newTranslationDialogY" value="539" />
    <histories>
      <item value="Merge remote-tracking branch 'origintianjin' into tianjin-dev" />
      <item value="Unresolved reference: CenterHorizontally" />
      <item value="This state should be hoisted" />
      <item value="Don't copy over" />
      <item value="Redundant label can be removed" />
      <item value="animation" />
      <item value="surfaceColor color will be changing gradually from primary to surface" />
      <item value="surfaceColor will be updated gradually from one color to the other" />
      <item value="If the message is expanded, we display all its content otherwise we only display the first line" />
      <item value="We toggle the isExpanded variable when we click on this Column" />
      <item value="We keep track if the message is expanded or not in this" />
      <item value="is Expanded" />
      <item value="fill Max Size" />
      <item value="Previews are also interactive after enabling the experimental setting" />
      <item value="Compose Previews are great to check quickly how a composable layout looks like" />
      <item value="I didn't know you can now run the emulator directly from Android Studio" />
      <item value="Writing Kotlin for UI seems so natural, Compose where have you been all my life?" />
      <item value="Searching for alternatives to XML layouts..." />
      <item value="Have you tried writing build.gradle with KTS?" />
      <item value="Add a vertical space between the author and message texts" />
      <item value="Add a horizontal space between the image and the column" />
      <item value="Clip image to be shaped as a circle" />
      <item value="space" />
      <item value="Composable functions with non-default parameters are not supported in Preview unless they are annotated with @PreviewParameter." />
      <item value="The following line ensures that the Material Icons font is included with your application, so that you can use the icons in the material Icons class." />
      <item value="This trailing comma makes auto-formatting nicer for build methods." />
      <item value="Column is also a layout widget. It takes a list of children and arranges them vertically. By default, it sizes itself to fit its children horizontally, and tries to be as tall as its parent. Invoke &quot;debug painting&quot; (press &quot;p&quot; in the console, choose the &quot;Toggle Debug Paint&quot; action from the Flutter Inspector in Android Studio, or the &quot;Toggle Debug Paint&quot; command in Visual Studio Code) to see the wireframe for each widget. Column has various properties to control how it sizes itself and how it positions its children. Here we use mainAxisAlignment to center the children vertically; the main axis here is the vertical axis because Columns are vertical (the cross axis would be horizontal)." />
      <item value="Center is a layout widget. It takes a single child and positions it in the middle of the parent." />
      <item value="Here we take the value from the MyHomePage object that was created by the App.build method, and use it to set our appbar title." />
      <item value="This method is rerun every time setState is called, for instance as done by the _incrementCounter method above. The Flutter framework has been optimized to make rerunning build methods fast, so that you can just rebuild anything that needs updating rather than having to individually change instances of widgets." />
      <item value="This call to setState tells the Flutter framework that something has changed in this State, which causes it to rerun the build method below so that the display can reflect the updated values. If we changed _counter without calling setState(), then the build method would not be called again, and so nothing would appear to happen." />
      <item value="This widget is the home page of your application. It is stateful, meaning that it has a State object (defined below) that contains fields that affect how it looks. This class is the configuration for the state. It holds the values (in this case the title) provided by the parent (in this case the App widget) and used by the build method of the State. Fields in a Widget subclass are always marked &quot;final&quot;." />
      <item value="This is the theme of your application. Try running your application with &quot;flutter run&quot;. You'll see the application has a blue toolbar. Then, without quitting the app, try changing the primarySwatch below to Colors.green and then invoke &quot;hot reload&quot; (press &quot;r&quot; in the console where you ran &quot;flutter run&quot;, or simply save your changes to &quot;hot reload&quot; in a Flutter IDE). Notice that the counter didn't reset back to zero; the application is not restarted." />
      <item value="This widget is the root of your application." />
      <item value="Missing accessibility label: provide either a view with an android:labelFor that references this view or provide an android:hint" />
      <item value="This custom view should extend androidx.appcompat.widget.AppCompatTextView instead" />
      <item value="Specifies that this view should permit nested scrolling within a compatible ancestor view." />
      <item value="Defines over-scrolling behavior. This property is used only if the View is scrollable. Over-scrolling is the ability for the user to receive feedback when attempting to scroll beyond meaningful content." />
      <item value="Set this if the view will serve as a scrolling container, meaning that it can be resized to shrink its overall window so that there will be space for an input method. If not set, the default value will be true if &quot;scrollbars&quot; has the vertical scrollbar set, else it will be false." />
      <item value="Consider replacing android:layout_alignParentRight with android:layout_alignParentEnd=&quot;true&quot; to better support right-to-left layouts" />
      <item value="查看" />
      <item value="Alphabet" />
      <item value="This declaration is in a preview state and can be changed in a backwards-incompatible manner with a best-effort migration. Its usage should be marked with '@kotlinx.coroutines.FlowPreview' or '@OptIn(kotlinx.coroutines.FlowPreview::class)' if you accept the drawback of relying on preview API" />
      <item value="Accepts the given collector and emits values into it. This method can be used along with SAM-conversion of FlowCollector: myFlow.collect { value -&gt; println(&quot;Collected value&quot;) } Method inheritance To ensure the context preservation property, it is not recommended implementing this method directly. Instead, AbstractFlow can be used as the base type to properly ensure flow's properties. All default flow implementations ensure context preservation and exception transparency properties on a best-effort basis and throw IllegalStateException if a violation was detected." />
      <item value="Cannot call this method while RecyclerView is computing a layout or scrolling androidx.recyclerview.widget.RecyclerView{560948 VFED..... ......I. 0,0-0,0 7f0a023f app:idgrid_rv}, adapter:cn.crrc.imos.mainfragments.home.HomeFragmentGridRvAdapter@12613e1, layout:androidx.recyclerview.widget.GridLayoutManager@84b3506, context:cn.crrc.imos.mian.MainActivity@ffdb9cb" />
      <item value="I'm not in China: https:cirosantilli.comchina-dictatorshiphas-ciro-santilli-you-ever-lived-in-china I'm not 100% certain how important going through a third server is, this is beyond my domain of expertise. You obviously want encryption at all steps, i.e. HTTPS. And HTTPS alone already cannot be broken by anybody, the CCP won't be able to read the message. It all depends on how likely you think that a timing attack is: https:book.cyberyozh.comtiming-attack-how-special-services-deanonymize-users-messengers If you VPN into Tor however, a timing attack feels very unlikely given that each circuit will have a different timing. And please don't leak your ID through git log like terminus 2049 did: https:cirosantilli.comchina-dictatorshipterminus2049 !! So newb. I also recommend trying to contact the following peoplegroups: https:cirosantilli.comchina-dictatorshipduty-machine They seem to exclusively use a bot. https:github.comchinatimelinechinatimeline.github.io also bot related stuff. Perhaps just HTTPS and then using a bot through a private github repo is the best option. Research things thoroughly before doing anything. If you would like to publish or highlight a limited number of things, feel free to contact me privately on protonmail: https:cirosantilli.comcontact and I might publish it myself. Stay safe." />
      <item value="I have a question that, how to post these sensitive news? R u in China. In my opinion, if u r in China, u should git the info to your own server outside Mainland, then git the info from outside to github. All git transfer must be https. Am I right?" />
      <item value="D:gradlecachestransforms-2files-2.10a20ec77ce1c7059350ffcf45d4d2037jetified-BRV-1.3.83jarsclasses.jar!META-INFbrv_release.kotlin_module: Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.6.0, expected version is 1.4.0." />
      <item value="D:gradlecachesmodules-2files-2.1org.jetbrains.kotlinkotlin-stdlib1.6.2111ef67f1900634fd951bad28c53ec957fabbe5b8kotlin-stdlib-1.6.21.jar!META-INFkotlin-stdlib.kotlin_module: Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.6.0, expected version is 1.4.0." />
      <item value="User Profile Bean" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="51" />
        <entry key="ENGLISH" value="52" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1669599380971" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20221025001414231" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="translator" value="BAIDU" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1677460680621" />
  </component>
  <component name="Translation.Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20221025001414231" />
      </app-key>
    </option>
    <option name="primaryLanguage" value="CHINESE" />
    <option name="translateDocumentation" value="true" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogHeight" value="256" />
    <option name="newTranslationDialogWidth" value="786" />
    <option name="newTranslationDialogX" value="609" />
    <option name="newTranslationDialogY" value="566" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="Expected a color resource id (R.color.) but received an RGB integer" />
      <item value="default Config" />
      <item value="test Instrumentation Runner" />
      <item value="debuggable" />
      <item value="minify Enabled" />
      <item value="The option 'android.enableAapt2' is deprecated. The current default is 'true'. It has been removed from the current version of the Android Gradle plugin. This property has no effect, AAPT2 is now always used." />
      <item value="bingoogolapple" />
      <item value="material" />
      <item value="support" />
      <item value="junit" />
      <item value="java.lang.RuntimeException: Unable to instantiate activity ComponentInfo{com.tt.wms_appcom.tt.wms_app.DaoHuoActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'android.content.ContentResolver android.content.Context.getContentResolver()' on a null object reference" />
      <item value="Classifier 'ArticleResponse' does not have a companion object, and thus must be initialized here" />
      <item value="We recommend using a newer Android Gradle plugin to use compileSdk = 33 This Android Gradle plugin (7.2.1) was tested up to compileSdk = 32" />
      <item value="storageemulated0downloadapp-wyeth.apk: open failed: EEXIST (File exists)" />
      <item value="java.io.IOException: Cleartext HTTP traffic to 101.132.141.149 not permitted" />
      <item value="not permitted" />
      <item value="This plugin add SVN disconnect action to VCS menu. This action perform disconnect project from SVN and clean project from svn specific folders (.svn) Getting started Run action \&quot;SVN disconnect\&quot; from VCS menu. Subversion VCS should be disabled in all modules." />
      <item value="Drag Image View" />
      <item value="paid" />
      <item value="Purchased" />
      <item value="The specified message queue synchronization barrier token has not been posted or has already been removed" />
      <item value="Preview apiLevel must be set to an integer between 28 and 33" />
      <item value="WEAR PREVIEW DEVICE WIDTH DP" />
      <item value="Chip" />
      <item value="Toggle Chip" />
      <item value="Self Improvement" />
      <item value="codelabs" />
      <item value="Square Device" />
      <item value="Square" />
      <item value="Reusable Components" />
      <item value="Start Only Text Composables" />
      <item value="If you are using Compose Navigation, use the Wear OS version (NOT the androidx.navigation:navigation-compose version), that is, uncomment the line below. implementation &quot;androidx.wear.compose:compose-navigation:wear_compose_version&quot;" />
      <item value="Foundation is additive, so you can use the mobile version in your Wear OS app" />
      <item value="Foundation is additive, so you can use the mobile version in your Wear OS app." />
      <item value="Compose for Wear OS Dependencies" />
      <item value="General Compose dependencies" />
      <item value="Review Dependencies" />
      <item value="To finish setting up Crashlytics and see initial data in the Crashlytics dashboard of the Firebase console, you need to force a test crash. Add code to your app that you can use to force a test crash. You can use the following code in your app's MainActivity to add a button to your app that, when pressed, causes a crash. The button is labeled &quot;Test Crash&quot;." />
      <item value="Add Firebase Crashlytics to your app to help you track, prioritize, and fix stability issues that erode your app quality" />
      <item value="Visit the complete Crashlytics getting started documentation to learn more about Crashlytics. Crashlytics automatically starts collecting crash reports, but you can also customize your Firebase Crashlytics crash reports by adding opt-in reporting, logs, keys, and even tracking of non-fatal errors." />
      <item value="iscanlce" />
      <item value="Inv Work" />
      <item value="set Debug Mode" />
      <item value="open Activity Duration Track" />
      <item value="enable Aapt 2" />
      <item value="java.lang.NoSuchMethodError: No static method metafactory(LjavalanginvokeMethodHandlesLookup;LjavalangString;LjavalanginvokeMethodType;LjavalanginvokeMethodType;LjavalanginvokeMethodHandle;LjavalanginvokeMethodType;)LjavalanginvokeCallSite; in class LjavalanginvokeLambdaMetafactory; or its super classes (declaration of 'java.lang.invoke.LambdaMetafactory' appears in apexcom.android.artjavalibcore-oj.jar)" />
      <item value="Duplicate class com.google.gson.ExclusionStrategy found in modules gson-2.2.2.jar (gson-2.2.2.jar) and gson-2.8.6.jar (com.google.code.gson:gson:2.8.6)" />
      <item value="The following project options are deprecated and have been removed:" />
      <item value="double-quoted" />
      <item value="double" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="127" />
        <entry key="ENGLISH" value="127" />
        <entry key="GALICIAN" value="1" />
        <entry key="LATVIAN" value="1" />
      </map>
    </option>
  </component>
</application>
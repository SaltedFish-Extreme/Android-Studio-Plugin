<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogHeight" value="244" />
    <option name="newTranslationDialogWidth" value="376" />
    <option name="newTranslationDialogX" value="518" />
    <option name="newTranslationDialogY" value="600" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Only Edge" />
      <item value="Force Edge" />
      <item value="Returns the Adapter position of the item represented by this ViewHolder. &lt;p&gt; Note that this might be different than the {@link getLayoutPosition()} if there are pending adapter updates but a new layout pass has not happened yet. &lt;p&gt; RecyclerView does not handle any adapter updates until the next layout traversal. This may create temporary inconsistencies between what user sees on the screen and what adapter contents have. This inconsistency is not important since it will be less than 16ms but it might be a problem if you want to use ViewHolder position to access the adapter. Sometimes, you may need to get the exact adapter position to do some actions in response to user events. In that case, you should use this method which will calculate the Adapter position of the ViewHolder. &lt;p&gt; Note that if you've called {@link RecyclerView.AdapternotifyDataSetChanged()}, until the next layout pass, the return value of this method will be {@link NO_POSITION}. @return The adapter position of the item if it still exists in the adapter. {@link RecyclerViewNO_POSITION} if item has been removed from the adapter, {@link RecyclerView.AdapternotifyDataSetChanged()} has been called after the last layout pass or the ViewHolder has already been recycled." />
      <item value="Swipe Back Force Edge" />
      <item value="Swipe Back Only Edge" />
      <item value="is Swipe Back Only Edge" />
      <item value="get Swipe Back Direction For Activity" />
      <item value="Root Swipe Back Enable" />
      <item value="Direction" />
      <item value="Mask Alpha" />
      <item value="Swipe Back Ability.Direction" />
      <item value="swipe Back Force Edge" />
      <item value="is Root Swipe Back Enable" />
      <item value="get Confirm Dialog" />
      <item value="'onActivityResult(Int, Int, Intent?): Unit' is deprecated. Overrides deprecated member in 'androidx.activity.ComponentActivity'. Deprecated in Java" />
      <item value="Retrieve the OnBackPressedDispatcher that will be triggered when onBackPressed() is called." />
      <item value="set Content View" />
      <item value="Unsafe use of a nullable receiver of type Array&lt;(out) String!&gt;?" />
      <item value="Cache Manager Util" />
      <item value="window Fullscreen" />
      <item value="Web Container" />
      <item value="Swipe Item Layout" />
      <item value="Nested Scroll Agent Web View" />
      <item value="MODE NIGHT FOLLOW SYSTEM" />
      <item value="window Content Overlay" />
      <item value="A Drawable resource providing a graphical representation of its associated item. Use with the application tag (to supply a default round icon for all application components), or with the activity, receiver, service, or instrumentation tag (to supply a specific round icon for that component). It may also be used with the intent-filter tag to supply a round icon to show to the user when an activity is being selected based on a particular Intent. The given round icon will be used to display to the user a graphical representation of its associated component; for example, as the round icon for main activity that is displayed in the launcher. This must be a reference to a Drawable resource containing the image definition" />
      <item value="Flag indicating whether there should be no title on this window." />
      <item value="window Is Translucent" />
      <item value="window Disable Preview" />
      <item value="list divider" />
      <item value="window Action Bar" />
      <item value="window Soft Input Mode" />
      <item value="window Translucent Navigation" />
      <item value="window Translucent Status" />
      <item value="window No Title" />
      <item value="Flag indicating whether this window should have an Action Bar in place of the usual title bar." />
      <item value="The application should not provide its own launch screen" />
      <item value="This Drawable is overlaid over the foreground of the Window's content area, usually to place a shadow below the title" />
      <item value="window Background" />
      <item value="Flag allowing you to disable the splash screen for a window. The default value is false; if set to true, the system can never use the window's theme to show a splash screen before your actual instance is shown to the user" />
      <item value="The drawable for the list divider." />
      <item value="list Divider" />
      <item value="Invocation Target Exception" />
      <item value="Unable to start activity ComponentInfo{com.example.wanandroidcom.example.wanAndroid.ui.activity.SplashActivity}: android.view.InflateException: Binary XML file line 2 in com.example.wanandroid:layoutactivity_splash: Binary XML file line 2 in com.example.wanandroid:layoutactivity_splash: Error inflating class androidx.constraintlayout.widget.ConstraintLayout" />
      <item value="Custom Splash Screen" />
      <item value="A launchable activity must be exported as of Android 12, which also makes it available to other apps." />
      <item value="When you define paddingEnd you should probably also define paddingStart for right-to-left symmetry" />
      <item value="警示" />
      <item value="提示" />
      <item value="描述" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1050" />
        <entry key="ENGLISH" value="1051" />
        <entry key="IRISH" value="2" />
        <entry key="BASQUE" value="3" />
        <entry key="DANISH" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="7" />
        <entry key="FILIPINO" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="LATVIAN" value="2" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="5" />
        <entry key="MARATHI" value="3" />
        <entry key="BENGALI" value="2" />
        <entry key="NORWEGIAN" value="4" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="4" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1643981392101" />
  </component>
  <component name="Settings">
    <option name="translateDocumentation" value="true" />
  </component>
</application>
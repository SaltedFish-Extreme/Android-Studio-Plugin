<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="592" />
    <option name="newTranslationDialogX" value="432" />
    <option name="newTranslationDialogY" value="539" />
    <histories>
      <item value="Merge remote-tracking branch 'origintianjin' into tianjin-dev" />
      <item value="Unresolved reference: CenterHorizontally" />
      <item value="This state should be hoisted" />
      <item value="Don't copy over" />
      <item value="Redundant label can be removed" />
      <item value="animation" />
      <item value="surfaceColor color will be changing gradually from primary to surface" />
      <item value="surfaceColor will be updated gradually from one color to the other" />
      <item value="If the message is expanded, we display all its content otherwise we only display the first line" />
      <item value="We toggle the isExpanded variable when we click on this Column" />
      <item value="We keep track if the message is expanded or not in this" />
      <item value="is Expanded" />
      <item value="fill Max Size" />
      <item value="Previews are also interactive after enabling the experimental setting" />
      <item value="Compose Previews are great to check quickly how a composable layout looks like" />
      <item value="I didn't know you can now run the emulator directly from Android Studio" />
      <item value="Writing Kotlin for UI seems so natural, Compose where have you been all my life?" />
      <item value="Searching for alternatives to XML layouts..." />
      <item value="Have you tried writing build.gradle with KTS?" />
      <item value="Add a vertical space between the author and message texts" />
      <item value="Add a horizontal space between the image and the column" />
      <item value="Clip image to be shaped as a circle" />
      <item value="space" />
      <item value="Composable functions with non-default parameters are not supported in Preview unless they are annotated with @PreviewParameter." />
      <item value="The following line ensures that the Material Icons font is included with your application, so that you can use the icons in the material Icons class." />
      <item value="This trailing comma makes auto-formatting nicer for build methods." />
      <item value="Column is also a layout widget. It takes a list of children and arranges them vertically. By default, it sizes itself to fit its children horizontally, and tries to be as tall as its parent. Invoke &quot;debug painting&quot; (press &quot;p&quot; in the console, choose the &quot;Toggle Debug Paint&quot; action from the Flutter Inspector in Android Studio, or the &quot;Toggle Debug Paint&quot; command in Visual Studio Code) to see the wireframe for each widget. Column has various properties to control how it sizes itself and how it positions its children. Here we use mainAxisAlignment to center the children vertically; the main axis here is the vertical axis because Columns are vertical (the cross axis would be horizontal)." />
      <item value="Center is a layout widget. It takes a single child and positions it in the middle of the parent." />
      <item value="Here we take the value from the MyHomePage object that was created by the App.build method, and use it to set our appbar title." />
      <item value="This method is rerun every time setState is called, for instance as done by the _incrementCounter method above. The Flutter framework has been optimized to make rerunning build methods fast, so that you can just rebuild anything that needs updating rather than having to individually change instances of widgets." />
      <item value="This call to setState tells the Flutter framework that something has changed in this State, which causes it to rerun the build method below so that the display can reflect the updated values. If we changed _counter without calling setState(), then the build method would not be called again, and so nothing would appear to happen." />
      <item value="This widget is the home page of your application. It is stateful, meaning that it has a State object (defined below) that contains fields that affect how it looks. This class is the configuration for the state. It holds the values (in this case the title) provided by the parent (in this case the App widget) and used by the build method of the State. Fields in a Widget subclass are always marked &quot;final&quot;." />
      <item value="This is the theme of your application. Try running your application with &quot;flutter run&quot;. You'll see the application has a blue toolbar. Then, without quitting the app, try changing the primarySwatch below to Colors.green and then invoke &quot;hot reload&quot; (press &quot;r&quot; in the console where you ran &quot;flutter run&quot;, or simply save your changes to &quot;hot reload&quot; in a Flutter IDE). Notice that the counter didn't reset back to zero; the application is not restarted." />
      <item value="This widget is the root of your application." />
      <item value="Missing accessibility label: provide either a view with an android:labelFor that references this view or provide an android:hint" />
      <item value="This custom view should extend androidx.appcompat.widget.AppCompatTextView instead" />
      <item value="Specifies that this view should permit nested scrolling within a compatible ancestor view." />
      <item value="Defines over-scrolling behavior. This property is used only if the View is scrollable. Over-scrolling is the ability for the user to receive feedback when attempting to scroll beyond meaningful content." />
      <item value="Set this if the view will serve as a scrolling container, meaning that it can be resized to shrink its overall window so that there will be space for an input method. If not set, the default value will be true if &quot;scrollbars&quot; has the vertical scrollbar set, else it will be false." />
      <item value="Consider replacing android:layout_alignParentRight with android:layout_alignParentEnd=&quot;true&quot; to better support right-to-left layouts" />
      <item value="查看" />
      <item value="Alphabet" />
      <item value="This declaration is in a preview state and can be changed in a backwards-incompatible manner with a best-effort migration. Its usage should be marked with '@kotlinx.coroutines.FlowPreview' or '@OptIn(kotlinx.coroutines.FlowPreview::class)' if you accept the drawback of relying on preview API" />
      <item value="Accepts the given collector and emits values into it. This method can be used along with SAM-conversion of FlowCollector: myFlow.collect { value -&gt; println(&quot;Collected value&quot;) } Method inheritance To ensure the context preservation property, it is not recommended implementing this method directly. Instead, AbstractFlow can be used as the base type to properly ensure flow's properties. All default flow implementations ensure context preservation and exception transparency properties on a best-effort basis and throw IllegalStateException if a violation was detected." />
      <item value="Cannot call this method while RecyclerView is computing a layout or scrolling androidx.recyclerview.widget.RecyclerView{560948 VFED..... ......I. 0,0-0,0 7f0a023f app:idgrid_rv}, adapter:cn.crrc.imos.mainfragments.home.HomeFragmentGridRvAdapter@12613e1, layout:androidx.recyclerview.widget.GridLayoutManager@84b3506, context:cn.crrc.imos.mian.MainActivity@ffdb9cb" />
      <item value="I'm not in China: https:cirosantilli.comchina-dictatorshiphas-ciro-santilli-you-ever-lived-in-china I'm not 100% certain how important going through a third server is, this is beyond my domain of expertise. You obviously want encryption at all steps, i.e. HTTPS. And HTTPS alone already cannot be broken by anybody, the CCP won't be able to read the message. It all depends on how likely you think that a timing attack is: https:book.cyberyozh.comtiming-attack-how-special-services-deanonymize-users-messengers If you VPN into Tor however, a timing attack feels very unlikely given that each circuit will have a different timing. And please don't leak your ID through git log like terminus 2049 did: https:cirosantilli.comchina-dictatorshipterminus2049 !! So newb. I also recommend trying to contact the following peoplegroups: https:cirosantilli.comchina-dictatorshipduty-machine They seem to exclusively use a bot. https:github.comchinatimelinechinatimeline.github.io also bot related stuff. Perhaps just HTTPS and then using a bot through a private github repo is the best option. Research things thoroughly before doing anything. If you would like to publish or highlight a limited number of things, feel free to contact me privately on protonmail: https:cirosantilli.comcontact and I might publish it myself. Stay safe." />
      <item value="I have a question that, how to post these sensitive news? R u in China. In my opinion, if u r in China, u should git the info to your own server outside Mainland, then git the info from outside to github. All git transfer must be https. Am I right?" />
      <item value="D:gradlecachestransforms-2files-2.10a20ec77ce1c7059350ffcf45d4d2037jetified-BRV-1.3.83jarsclasses.jar!META-INFbrv_release.kotlin_module: Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.6.0, expected version is 1.4.0." />
      <item value="D:gradlecachesmodules-2files-2.1org.jetbrains.kotlinkotlin-stdlib1.6.2111ef67f1900634fd951bad28c53ec957fabbe5b8kotlin-stdlib-1.6.21.jar!META-INFkotlin-stdlib.kotlin_module: Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.6.0, expected version is 1.4.0." />
      <item value="User Profile Bean" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="51" />
        <entry key="ENGLISH" value="52" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1669599380971" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20221025001414231" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="translator" value="BAIDU" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1672457906690" />
  </component>
  <component name="Translation.Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20221025001414231" />
      </app-key>
    </option>
    <option name="primaryLanguage" value="CHINESE" />
    <option name="translateDocumentation" value="true" />
    <option name="translator" value="BAIDU" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="815" />
    <option name="newTranslationDialogY" value="470" />
    <histories>
      <item value="In the Project tool window, select the files you want to compare and choose Compare Files, or press Ctrl+D. Alternatively, select one file, choose Compare With from its context menu, and select a file that is outside your project. If you are comparing two files and want to add a third file to the comparison, right-click either left or right panel, select Switch to Three-Side Viewer, and load the required file by clicking Select file." />
      <item value="IllegalArgumentException: androidx.compose.runtime.snapshots.SnapshotStateList@d18f697 cannot be saved using the current SaveableStateRegistry. The default implementation only supports types which can be stored inside the Bundle. Please consider implementing a custom Saver for this class and pass it to rememberSaveable()." />
      <item value="Conflicting overloads: public fun WellnessTaskItem(taskName: String, onClose: () -&gt; Unit, modifier: Modifier = ...): Unit defined in com.example.basicstatecodelab in file WaterCounter.kt, public fun WellnessTaskItem(taskName: String, onClose: () -&gt; Unit, modifier: Modifier = ...): Unit defined in com.example.basicstatecodelab in file WellnessTaskItem.kt" />
      <item value="Modifier parameter should be the first optional parameter" />
      <item value="Cannot infer a type for this parameter. Please specify it explicitly." />
      <item value="Have you taken your 15 minute walk today?" />
      <item value="Changes to count are now tracked by Compos" />
      <item value="Creating a state object during composition without using remember" />
      <item value="Interface MutableState does not have constructors" />
      <item value="IllegalArgumentException: Only VectorDrawables and rasterized asset types are supported ex. PNG, JPG" />
      <item value="Scaffold" />
      <item value="remember Scroll State" />
      <item value="vertical Scroll" />
      <item value="Home Section" />
      <item value="h3 is the third largest headline, reserved for short, important text or numerals. For headlines, you can choose an expressive font, such as a display, handwritten, or script style. These unconventional font designs have details and intricacy that help attract the eye." />
      <item value="Content Scale.Crop" />
      <item value="Crop" />
      <item value="Material Theme" />
      <item value="Implement composable here" />
      <item value="Modifiers" />
      <item value="Well, I found that upgrading all the packages introduced in the project to the latest version will have Card components and properties, but the corresponding compilation SDK needs to be upgraded to 33, and the minimum adaptation SDK needs to be 25" />
      <item value="好了，我发现把项目中引入的所有包都升级到最新版就有Card组件和属性了，但是相应的编译SDK要升级到33，最低适配的SDK也要25才行" />
      <item value="renovate" />
      <item value="inversions" />
      <item value="quick yoga" />
      <item value="Basic Layouts in Compose Codelab" />
      <item value="Manifest merger failed : uses-sdk:minSdkVersion 24 cannot be smaller than version 25 declared in library [androidx.wear.compose:compose-material:1.1.0-rc01]" />
      <item value="Manifest merger failed : uses-sdk:minSdkVersion 24 cannot be smaller than version 25 declared in library [androidx.wear.compose:compose-material:1.0.0-alpha19]" />
      <item value="This material API is experimental and is likely to change or to be removed in the future." />
      <item value="Update 32.2.0: Lua's Prey The Kuva was poured, the lamps were lit, and the ritual of Continuity began. The 51st Warframe, VORUNA, is here! Four beasts, one heart. Voruna's loyal wolf pack, Dynar, Lycath, Raksh, and Ulfrun makes for a deadly combination of strength and stealth." />
      <item value="Dynamic color is available on Android 12+" />
      <item value="Response Throwable" />
      <item value="set Id" />
      <item value="get Work Oder Id" />
      <item value="on Success" />
      <item value="dcc Board Clear" />
      <item value="Attempt to invoke virtual method 'boolean java.lang.String.isEmpty()' on a null object reference" />
      <item value="get Root" />
      <item value="please choose" />
      <item value="power Add Adapter" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="35" />
        <entry key="ENGLISH" value="35" />
      </map>
    </option>
  </component>
</application>